# hw definition for ADA-F405 node

# ADA-F405 Bootloader

# MCU class and specific type
MCU STM32F4xx STM32F405xx

# crystal frequency
OSCILLATOR_HZ 12000000

# hw definition file for processing by chibios_pins.py

FLASH_RESERVE_START_KB 0
# two sectors for bootloader, two for storage
FLASH_BOOTLOADER_LOAD_KB 64

# board ID for firmware load
APJ_BOARD_ID 1099

# setup build for a peripheral firmware
env AP_PERIPH 1

# USB setup
USB_STRING_MANUFACTURER "ArduPilot"
USB_STRING_PRODUCT "%BOARD%"
#USB_VENDOR 0x2DAE 
#USB_PRODUCT 0x5011

define CH_CFG_ST_FREQUENCY 1000000

# Flash available
FLASH_SIZE_KB 1024

# Enable the sensor voltage pin
PC1 VDD_3V3_SENSORS_EN OUTPUT HIGH

STDOUT_SERIAL SD3
STDOUT_BAUDRATE 57600

# order of UARTs
SERIAL_ORDER OTG1 USART3

# USART3 
PB10 USART3_TX USART3
PB11 USART3_RX USART3

# USART6
PC6 USART6_TX USART6 SPEED_HIGH
PC7 USART6_RX USART6 SPEED_HIGH

define HAL_USE_SERIAL TRUE
define STM32_SERIAL_USE_USART3 TRUE

# USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# SWD debugging
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# enable CAN support
PB8 CAN1_RX CAN1
PB9 CAN1_TX CAN1

define HAL_USE_CAN TRUE
define STM32_CAN_USE_CAN1 TRUE

define CAN_APP_NODE_NAME "org.ardupilot.ADA-F405"

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

# reserve 256 bytes for comms between app and bootloader
RAM_RESERVE_START 256

# Add CS pins to ensure they are high in bootloader
PB12 MAG_CS CS
PA8 BARO_CS CS


define HAL_NO_GPIO_IRQ
define HAL_USE_EMPTY_IO TRUE

# make bl baudrate match debug baudrate for easier debugging
define BOOTLOADER_BAUDRATE 57600

# use a small bootloader timeout
define HAL_BOOTLOADER_TIMEOUT 1000
